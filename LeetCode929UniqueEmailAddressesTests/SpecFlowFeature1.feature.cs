// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LeetCode929UniqueEmailAddressesTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SpecFlowFeature1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SpecFlowFeature1", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "SpecFlowFeature1")))
            {
                global::LeetCode929UniqueEmailAddressesTests.SpecFlowFeature1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("NumUniqueEmails")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SpecFlowFeature1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void NumUniqueEmails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("NumUniqueEmails", null, new string[] {
                        "mytag"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "email"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+o.pw@kziczvh.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+d.h+b.ja@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+o.f.d@kziczvh.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+ng.r.iq@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+lp.k@kziczvh.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+n.h.e+n.g@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+k+p.j@kziczvh.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+w.y+b@kziczvh.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+x+d.c+f.t@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+x+t.y.l.i@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+brxxi@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+z+dr.k.u@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "r.cyo.g+d+l.c.n+g@tgsg.z.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+vq.o@kziczvh.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+uzq@kziczvh.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+mvz@kziczvh.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+taj@kziczvh.com"});
            table1.AddRow(new string[] {
                        "fg.r.u.uzj+fek@kziczvh.com"});
#line 6
 testRunner.Given("I have emails", ((string)(null)), table1, "Given ");
#line 26
 testRunner.When("I exec NumUniqueEmails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("the result should be 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
